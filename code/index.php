<?php
/*
Реализовать основные 4 арифметические операции в виде функции с тремя параметрами
 – два параметра это числа, третий – операция. 
 Обязательно использовать оператор return.
*/ 

function Operation($num1, $num2, $Operation) {
    switch ($Operation) {
        case 'plus':
            return $num1 + $num2;
        case 'minus':
            return $num1 - $num2;
        case 'multiply':
            return $num1 * $num2;
        case 'divide':
            return ($num2 == 0 or $num1 == 0) ? 'Делить на 0 нельзя' : $num1 / $num2;
        default:
            return 'Ошибка';
    }
}

$num1 = 8;
$num2 = 2;

$operations = ['plus', 'minus', 'multiply', 'divide'];
/*
2. Реализовать функцию с тремя параметрами: function mathOperation($arg1, $arg2, $operation), где $arg1, $arg2 – значения аргументов, $operation – строка с названием операции. В зависимости от переданного значения операции выполнить одну из арифметических операций (использовать функции из пункта 3) и вернуть полученное значение (использовать switch).

*/ 

foreach ($operations as $operation) {
    echo "Результат операции {$operation} между {$num1} и {$num2}: " . Operation($num1, $num2, $operation),";\n" ; 
};


/*
3. Объявить массив, в котором в качестве ключей будут использоваться названия областей, а в качестве значений – массивы с названиями городов из 
соответствующей области. 
Вывести в цикле значения массива, чтобы результат был таким: 
Московская область: Москва, Зеленоград, Клин Ленинградская область: 
Санкт-Петербург, Всеволожск, Павловск, Кронштадт Рязанская область … 
(названия городов можно найти на maps.yandex.ru).

*/ 
$regions = [
    "Московская область" => ["Москва", "Зеленоград", "Клин"],
    "Ленинградская область" => ["Санкт-Петербург", "Всеволожск", "Павловск", "Кронштадт"],
    "Рязанская область" => ["Рязань", "Касимов", "Михайлов"],
    "Тверская область" => ["Тверь", "Калининец", "Ржев"],
    "Смоленская область" => ["Смоленск", "Вязьма", "Дорогобуж"],
    "Нижегородская область" => ["Нижний Новгород", "Бор", "Арзамас"],
];

foreach ($regions as $region => $cities) {
    echo $region . ": " . implode(", ", $cities),";\n";
}


/*
4. Объявить массив, индексами которого являются буквы русского языка, а значениями – соответствующие латинские буквосочетания (‘а’=> ’a’, ‘б’ => ‘b’, ‘в’ => ‘v’, ‘г’ => ‘g’, …, ‘э’ => ‘e’, ‘ю’ => ‘yu’, ‘я’ => ‘ya’). 
Написать функцию транслитерации строк.

*/ 
$translitMap = [
    'а' => 'a', 'б' => 'b', 'в' => 'v', 'г' => 'g', 'д' => 'd', 'е' => 'e',
    'ё' => 'yo', 'ж' => 'zh', 'з' => 'z', 'и' => 'i', 'й' => 'y', 'к' => 'k',
    'л' => 'l', 'м' => 'm', 'н' => 'n', 'о' => 'o', 'п' => 'p', 'р' => 'r',
    'с' => 's', 'т' => 't', 'у' => 'u', 'ф' => 'f', 'х' => 'kh', 'ц' => 'ts',
    'ч' => 'ch', 'ш' => 'sh', 'щ' => 'shch', 'ъ' => '', 'ы' => 'y', 'ь' => '',
    'э' => 'e', 'ю' => 'yu', 'я' => 'ya'
];


function transliterate($string) {
    global $translitMap; 
    return strtr(mb_strtolower($string), $translitMap); 
}
$input = "Привет, как дела?";
$output = transliterate($input);
echo $output,";\n"; 

/*
5. *С помощью рекурсии организовать функцию возведения числа в степень. 
Формат: function power($val, $pow), где $val – заданное число, $pow – степень.

*/ 
function power($val, $pow) {
    if ($pow == 0) return 1;
    return $val ** $pow ;
    
}
$val = 4;
$pow = 2;
echo "Возведение числа {$val}  в степень {$pow}  = ". power ($val, $pow),";\n" ; 

/*
6. *Написать функцию, которая вычисляет текущее время и возвращает его в формате с правильными склонениями, например:
22 часа 15 минут
21 час 43 минуты.

*/ 
function getCurrentTime() {

    $hours = date('H');
    $minutes = date('i');
    function getHourSuffix($hour) {
        if ($hour % 10 == 1 && $hour % 100 != 11) {
            return "час";
        } elseif ($hour % 10 >= 2 && $hour % 10 <= 4 && ($hour % 100 < 12 || $hour % 100 > 14)) {
            return "часа";
        } else {
            return "часов";
        }
    }
    function getMinuteSuffix($minute) {
        if ($minute % 10 == 1 && $minute % 100 != 11) {
            return "минута";
        } elseif ($minute % 10 >= 2 && $minute % 10 <= 4 && ($minute % 100 < 12 || $minute % 100 > 14)) {
            return "минуты";
        } else {
            return "минут";
        }
    }

    return "$hours " . getHourSuffix($hours) . " $minutes " . getMinuteSuffix($minutes);
}

echo getCurrentTime();
